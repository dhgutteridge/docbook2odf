#!/usr/bin/perl
use File::Copy;
use Image::Magick;


=head1 NAME
	
	docbook2odf - DocBook to OpenDocument XSL Transformation utils
	Copyright (C) 2006 Roman Fordinal
	http://open.comsultia.com/docbook2odf/
	
=cut

=head1 LICENSE
	
	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version 2
	of the License, or (at your option) any later version.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
=cut

=head1 WARNING
	
	THIS IS VERY UGLY PERL SCRIPT SPEEDY WRITED :)
	ONLY FOR DEMONSTRATION OF XSLT IMPLEMENTATION
 
=cut


$WD="/usr/tmp/docbook2odf-".$ENV{USER};
$DD="/usr/local/share/docbook2odf";


system("rm $WD/ -rf");
system("mkdir -p $WD/work/Pictures");


&convert();


sub convert
{
	
	my $sgml=$ARGV[0];
	$sgml=~s/([ \(&\)'])/\\$1/g;
	my $koren=$sgml;$koren=~s|\.docbook$||;
	
	my $dir=$sgml;
	$dir=~s/^(.*)\/(.*)/\1\//;
	
	chdir "$dir";
	
	#print "call xsltproc...\n";
	my $cmd="xsltproc --xinclude --output $WD/work/output.xml /usr/local/share/docbook2odf/xsl/docbook.xsl $sgml";
	my $out=system($cmd);
	#print "done\n";
	
	#exit;
	
	open(HND,"<$WD/work/output.xml");undef $/;
	my $file=<HND>;
	unlink "$WD/work/output.xml";
	
	# MIMETYPE
	open(HND,">$WD/work/mimetype");
	print HND 'application/vnd.oasis.opendocument.text';
	
	# META
	my $meta;
	if ($file=~s/(<office:document-meta.*?<\/office:document-meta>)//s){$meta=$1};
	open(HND,">$WD/work/meta.xml");
	print HND '<?xml version="1.0" encoding="UTF-8"?>';print HND "\n";
	print HND $meta;
	
	# STYLES
	my $styles;
	if ($file=~s/(<office:document-styles.*?<\/office:document-styles>)//s){$styles.=$1};
	open(HND,">$WD/work/styles.xml");
	print HND '<?xml version="1.0" encoding="UTF-8"?>';print HND "\n";
	print HND $styles;
	
=head1
	# SETTINGS
	my $settings;
	if ($file=~s/(<office:document-settings.*?<\/office:document-settings>)//s){$settings.=$1};
	open(HND,">$WD/work/settings.xml");
	print HND '<?xml version="1.0" encoding="UTF-8"?>';print HND "\n";
	print HND $settings;
=cut
	
	# CONTENT
	my $content;
	if ($file=~s/(<office:document-content.*?<\/office:document-content>)//s){$content.=$1};
	
	
	# copy pictures into work directory
	my @hrefs;
	my $i=1;
	while ($content=~s|xlink:href="(.*?)"|xlink:href=<!TMPHREF-$i!>|)
	{
		my $href=$1;
		print "processing xlink:href [$i] '$href'\n";
		
		my $ext=$href;$ext=~s|^.*\.||;
		
		my $filename=sprintf("%07d",$i);
		$hrefs[$i]=$filename.".".$ext;
		
		copy($href,$WD."/work/Pictures/$filename.$ext");
		#$content=~s|<!TMPHREF!>|$href|;
		$i++;
	}
	$content=~s|<!TMPHREF-(\d+)!>|"Pictures/$hrefs[$1]"|g;
	
	
	while($content=~s|function:([\w:\-]+):\((.*?)\)|<!TMP!>|)
	{
		my $function=$1;
		my $data=$2;
		if ($function eq "getimage-width")
		{
			my $p = new Image::Magick;
			$p->Read($data);
			my $width=($p->Get('columns')*0.02644)."cm";
			$content=~s|<!TMP!>|$width|;
			next;
		}
		if ($function eq "getimage-height")
		{
			my $p = new Image::Magick;
			$p->Read($data);
			my $height=($p->Get('height')*0.02644)."cm";
			$content=~s|<!TMP!>|$height|;
			next;
		}
		
		#751mm=284px*2.644 196mm=74px
		
		$content=~s|<!TMP!>||;
	}
	
	
	open(HND,">$WD/work/content.xml");
	print HND '<?xml version="1.0" encoding="UTF-8"?>';print HND "\n";
	print HND $content;
	
	
	
	# manifest
	chdir($WD."/work/");system("mkdir META-INF");
	my $manifest;
	if ($file=~s/(<manifest:manifest.*?<\/manifest:manifest>)//s){$manifest.=$1};
	open(HND,">$WD/work/META-INF/manifest.xml");
	print HND '<?xml version="1.0" encoding="UTF-8"?>';print HND "\n";
	print HND '<!DOCTYPE manifest:manifest PUBLIC "-//OpenOffice.org//DTD Manifest 1.0//EN" "Manifest.dtd">';print HND "\n";
	print HND $manifest;
	
	
	
	if ($content=~/<office:text/)
	{
		system("zip -r ../document.odt *");
		print "saved into $WD/document.odt\n";
	}
	elsif ($content=~/<office:presentation/)
	{
		system("zip -r ../document.odp *");
		print "saved into $WD/document.odp\n";
	}
	
}